name: Build & Release
on:
  # Enable manual run
  workflow_dispatch:
  # Verify builds succeed on pull requests
  pull_request:
  # Build & deploy for tag events matching v*, i.e. v1.0.0, v20.15.10
  push:
    tags:
      - "v*"

env:
  app-display-name: "Unit Bargain Hunter"
  author: "Merritt Codes"
  identifier: "codes.merritt.bargain"
  msix-icon-path: "assets\\icon\\icon.png"

jobs:
  # --------------------------------- Configure -------------------------------- #
  create-build:
    name: Create ${{ matrix.target }} build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        target: [Windows, Non-Windows]
        include:
          # - os: macos-10.15 # Catalina
          #   target: macOS
          #   build_target: macos
          #   build_path: build/macos/Build/Products/Release
          #   asset_extension: .zip
          #   asset_content_type: application/zip
          - os: ubuntu-20.04
            target: Non-Windows
          - os: windows-2019
            target: Windows

      # Disable fail-fast as we want results from all even if one fails.
      fail-fast: false

    # ----------------------------------- Setup ---------------------------------- #
    steps:
      - name: Setup Flutter
        uses: subosito/flutter-action@v2.3.0
        # with:
        #   channel: beta

      - name: Install Android dependencies
        if: matrix.target != 'Windows'
        uses: actions/setup-java@v1
        with:
          java-version: "12.x"

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Configure Keystore for Android
        if: matrix.target != 'Windows'
        run: |
          echo "$PLAY_STORE_UPLOAD_KEY" | base64 --decode > app/upload-keystore.jks
          echo "storeFile=upload-keystore.jks" >> key.properties
          echo "keyAlias=$KEYSTORE_KEY_ALIAS" >> key.properties
          echo "storePassword=$KEYSTORE_STORE_PASSWORD" >> key.properties
          echo "keyPassword=$KEYSTORE_KEY_PASSWORD" >> key.properties
        env:
          PLAY_STORE_UPLOAD_KEY: ${{ secrets.PLAY_STORE_UPLOAD_KEY }}
          KEYSTORE_KEY_ALIAS: ${{ secrets.KEYSTORE_KEY_ALIAS }}
          KEYSTORE_KEY_PASSWORD: ${{ secrets.KEYSTORE_KEY_PASSWORD }}
          KEYSTORE_STORE_PASSWORD: ${{ secrets.KEYSTORE_STORE_PASSWORD }}
        working-directory: android

      - name: Prepare for build
        run: |
          flutter config --enable-linux-desktop
          flutter config --enable-macos-desktop
          flutter config --enable-windows-desktop
          flutter upgrade
          flutter pub get

      # ----------------------------------- Build ---------------------------------- #

      - name: Run build_runner
        run: flutter pub run build_runner build --delete-conflicting-outputs

      - name: Run build script for non-Windows platforms
        if: matrix.target != 'Windows'
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASES_TOKEN }}
        run: flutter pub run flutter_app_builder --platforms=linux,android

      - name: Run build script for Windows
        if: matrix.target == 'Windows'
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASES_TOKEN }}
        run: flutter pub run flutter_app_builder --platforms=windows

      # ---------------------------------- Upload ---------------------------------- #

      - name: Upload artifacts to workflow
        uses: actions/upload-artifact@v2
        with:
          name: artifacts
          path: output/*

      - name: Create Draft Release & Upload artifacts
        if: startsWith(github.ref, 'refs/tags/v')
        uses: marvinpinto/action-automatic-releases@v1.2.1
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          draft: true
          prerelease: false
          files: |
            output/*
